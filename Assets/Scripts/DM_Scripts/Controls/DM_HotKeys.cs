//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/DM_Scripts/Controls/DM_HotKeys.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @HotKeyControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @HotKeyControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DM_HotKeys"",
    ""maps"": [
        {
            ""name"": ""Camera Switch"",
            ""id"": ""530d5cc8-a8e9-4310-a1a9-d1bb560cf98c"",
            ""actions"": [
                {
                    ""name"": ""SwitchHotkey"",
                    ""type"": ""Button"",
                    ""id"": ""737cedc0-0494-412c-b1c0-3a250e5a1a67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5e4c695b-8d8b-4a0e-a72d-459e87bde3ff"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotkey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera KeyBoard"",
            ""id"": ""356b4aa0-eb76-481b-ad79-ef8bb8edf67c"",
            ""actions"": [
                {
                    ""name"": ""CameraKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""ed7312b4-370a-4514-ad8d-89d682c3f248"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2bbd597e-8ca5-49da-9880-d15e85eaa617"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""348b3cec-0aa9-4383-8b24-707cc3300171"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39dd6538-e9d1-4cb7-84e3-cd214681d067"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79a7fe33-be33-45c5-a785-2fd5d9e2ede8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be462352-314c-40ba-8438-87edc46224a5"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ee6f56c-c0aa-42fb-be8a-de101966919f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57b1fe4b-29e8-47f0-88ea-8ddc6d0c331c"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9edf5e13-5d04-47fb-aa3c-2443a5aab2b3"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera Switch
        m_CameraSwitch = asset.FindActionMap("Camera Switch", throwIfNotFound: true);
        m_CameraSwitch_SwitchHotkey = m_CameraSwitch.FindAction("SwitchHotkey", throwIfNotFound: true);
        // Camera KeyBoard
        m_CameraKeyBoard = asset.FindActionMap("Camera KeyBoard", throwIfNotFound: true);
        m_CameraKeyBoard_CameraKeyboard = m_CameraKeyBoard.FindAction("CameraKeyboard", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera Switch
    private readonly InputActionMap m_CameraSwitch;
    private List<ICameraSwitchActions> m_CameraSwitchActionsCallbackInterfaces = new List<ICameraSwitchActions>();
    private readonly InputAction m_CameraSwitch_SwitchHotkey;
    public struct CameraSwitchActions
    {
        private @HotKeyControls m_Wrapper;
        public CameraSwitchActions(@HotKeyControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchHotkey => m_Wrapper.m_CameraSwitch_SwitchHotkey;
        public InputActionMap Get() { return m_Wrapper.m_CameraSwitch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraSwitchActions set) { return set.Get(); }
        public void AddCallbacks(ICameraSwitchActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraSwitchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraSwitchActionsCallbackInterfaces.Add(instance);
            @SwitchHotkey.started += instance.OnSwitchHotkey;
            @SwitchHotkey.performed += instance.OnSwitchHotkey;
            @SwitchHotkey.canceled += instance.OnSwitchHotkey;
        }

        private void UnregisterCallbacks(ICameraSwitchActions instance)
        {
            @SwitchHotkey.started -= instance.OnSwitchHotkey;
            @SwitchHotkey.performed -= instance.OnSwitchHotkey;
            @SwitchHotkey.canceled -= instance.OnSwitchHotkey;
        }

        public void RemoveCallbacks(ICameraSwitchActions instance)
        {
            if (m_Wrapper.m_CameraSwitchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraSwitchActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraSwitchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraSwitchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraSwitchActions @CameraSwitch => new CameraSwitchActions(this);

    // Camera KeyBoard
    private readonly InputActionMap m_CameraKeyBoard;
    private List<ICameraKeyBoardActions> m_CameraKeyBoardActionsCallbackInterfaces = new List<ICameraKeyBoardActions>();
    private readonly InputAction m_CameraKeyBoard_CameraKeyboard;
    public struct CameraKeyBoardActions
    {
        private @HotKeyControls m_Wrapper;
        public CameraKeyBoardActions(@HotKeyControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraKeyboard => m_Wrapper.m_CameraKeyBoard_CameraKeyboard;
        public InputActionMap Get() { return m_Wrapper.m_CameraKeyBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraKeyBoardActions set) { return set.Get(); }
        public void AddCallbacks(ICameraKeyBoardActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraKeyBoardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraKeyBoardActionsCallbackInterfaces.Add(instance);
            @CameraKeyboard.started += instance.OnCameraKeyboard;
            @CameraKeyboard.performed += instance.OnCameraKeyboard;
            @CameraKeyboard.canceled += instance.OnCameraKeyboard;
        }

        private void UnregisterCallbacks(ICameraKeyBoardActions instance)
        {
            @CameraKeyboard.started -= instance.OnCameraKeyboard;
            @CameraKeyboard.performed -= instance.OnCameraKeyboard;
            @CameraKeyboard.canceled -= instance.OnCameraKeyboard;
        }

        public void RemoveCallbacks(ICameraKeyBoardActions instance)
        {
            if (m_Wrapper.m_CameraKeyBoardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraKeyBoardActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraKeyBoardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraKeyBoardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraKeyBoardActions @CameraKeyBoard => new CameraKeyBoardActions(this);
    public interface ICameraSwitchActions
    {
        void OnSwitchHotkey(InputAction.CallbackContext context);
    }
    public interface ICameraKeyBoardActions
    {
        void OnCameraKeyboard(InputAction.CallbackContext context);
    }
}
